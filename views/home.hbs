<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Google Maps</title>
         <!--background-image:url(map.jpg)  #ffdab3-->
        <style>
            body{
               background-image:url(plain.jpeg)
            }
            input[type=submit]{
	            display: inline-block;
	            background-color: #f5f5f5;
	            background-image: -webkit-linear-gradient(top,#f5f5f5,#f1f1f1);
	            background-image: -moz-linear-gradient(top,#f5f5f5,#f1f1f1);
	            background-image: -ms-linear-gradient(top,#f5f5f5,#f1f1f1);
	            background-image: -o-linear-gradient(top,#f5f5f5,#f1f1f1);
	            background-image: linear-gradient(top,#f5f5f5,#f1f1f1);
	            color: #444;
	
	            border: 1px solid #dcdcdc;
	            -webkit-border-radius: 2px;
	            -moz-border-radius: 2px;
	            border-radius: 2px;
	
	            cursor: default;
	            font-size: 11px;
	            font-weight: bold;
	            text-align: center;
	            height: 27px;
	            line-height: 27px;
	            min-width: 54px;
	            padding: 0 8px;
	            text-decoration: none;
            }
            input[type=submit]:hover{
            	background-color: #F8F8F8;
            	background-image: -webkit-linear-gradient(top,#f8f8f8,#f1f1f1);
            	background-image: -moz-linear-gradient(top,#f8f8f8,#f1f1f1);
            	background-image: -ms-linear-gradient(top,#f8f8f8,#f1f1f1);
            	background-image: -o-linear-gradient(top,#f8f8f8,#f1f1f1);
            	background-image: linear-gradient(top,#f8f8f8,#f1f1f1);
            	
            	border: 1px solid #C6C6C6;
            	color: #333;
            	
            	-webkit-box-shadow: 0px 1px 1px rgba(0,0,0,.1);
            	-moz-box-shadow: 0px 1px 1px rgba(0,0,0,.1);
            	box-shadow: 0px 1px 1px rgba(0,0,0,.1);
            }
            body{
                font-family: Helvetica;
            }
            #map{
                height:600px;
                width:100%;
            }
            #butt{
            	-moz-box-shadow: 0px 0px 0px 0px #9fb4f2;
            	-webkit-box-shadow: 0px 0px 0px 0px #9fb4f2;
            	box-shadow: 0px 0px 0px 0px #9fb4f2;
            	background-color:#7892c2;
            	-moz-border-radius:28px;
            	-webkit-border-radius:28px;
            	border-radius:28px;
            	border:1px solid #4e6096;
            	cursor:pointer;
            	color:#ffffff;
            	font-family:Verdana;
            	font-size:17px;
            	font-weight:bold;
            	padding:15px 54px;
            	text-decoration:none;
            	text-shadow:0px 1px 0px #283966;
                position: absolute; 
                left: 50%; 
                top: 50%; 
                transform: translate(-50%, -50%);
            }
            #butt:hover {
            	background-color:#476e9e;
            }
            #instructions{
                background-color: rgb(255, 255, 255, 50%);
                position: absolute; 
                left: 30%; 
                top: 1.5%;
                font-family: helvetica;
                font-size: 20px;
            }
            header{
                  display: flex;
                  align-items: center;
            }
            h3{
                display: inline;
            }
            #subLogout{
                position: absolute;
                left: 90%;
                margin: 0 0 6px 0;
                background-color:#272727;
                font-family:Verdana;
            	font-size:12px;
                color:white;
	            background-image: -webkit-linear-gradient(top,#272727,#838383);
            	background-image: -moz-linear-gradient(top,#272727,#838383);
             	background-image: -ms-linear-gradient(top,#272727,#838383);
             	background-image: -o-linear-gradient(top,#272727,#838383);
	            background-image: linear-gradient(top,#272727,#838383);
            }
            #subLogout:hover{
                background-color:#838383;
             	background-image: -webkit-linear-gradient(top,#6d6d6d,#838383);
            	background-image: -moz-linear-gradient(top,#6d6d6d,#838383);
            	background-image: -ms-linear-gradient(top,#6d6d6d,#838383);
            	background-image: -o-linear-gradient(top,#6d6d6d,#838383);
             	background-image: linear-gradient(top,#6d6d6d,#838383);
            }
            #subQuery{
                background-color: #4D90FE;
	            background-image: -webkit-linear-gradient(top,#4d90fe,#4787ed);
            	background-image: -moz-linear-gradient(top,#4d90fe,#4787ed);
             	background-image: -ms-linear-gradient(top,#4d90fe,#4787ed);
             	background-image: -o-linear-gradient(top,#4d90fe,#4787ed);
	            background-image: linear-gradient(top,#4d90fe,#4787ed);

	            border: 1px solid #3079ED;
	            color: white;
            }
            #subQuery:hover{
                border: 1px solid #2F5BB7;
	
	            background-color: #357AE8;
             	background-image: -webkit-linear-gradient(top,#4d90fe,#357ae8);
            	background-image: -moz-linear-gradient(top,#4d90fe,#357ae8);
            	background-image: -ms-linear-gradient(top,#4d90fe,#357ae8);
            	background-image: -o-linear-gradient(top,#4d90fe,#357ae8);
             	background-image: linear-gradient(top,#4d90fe,#357ae8);
	
             	-webkit-box-shadow: 0 1px 1px rgba(0,0,0,.1);
            	-moz-box-shadow: 0 1px 1px rgba(0,0,0,.1);
	            box-shadow: 0 1px 1px rgba(0,0,0,.1);
            }
        </style>
       <script src="https://code.jquery.com/jquery-3.4.1.js"> </script>
    </head>
    <body>
        <header>
            <h3> Hello! {{username}}</h3>
            <a id="logout" href="Logout"><input id="subLogout" type="submit" value="Log Out"></a>
        </header>
        

       

        <input type="text" name="query" id="query" placeholder="Search for places">
        <input id="subQuery" type="button" name="subQuery" value="Search">
        <select name="filter" id="filter">
            <option value="museum">Museums</option>
            <option value="park">Parks</option>
            <option value="airport">Airports</option>
            <option value="shopping_mall">Shopping Malls</option>
        </select>

        <br>
        
        <div id="overlay" style="position:fixed;display:none;width:100%;height:100%;top:0;left:0;right:0;bottom:0;background-color: rgba(0,0,0,0.5);z-index:2;cursor:pointer;">
            <div id="instructions">STEP 1: CHOOSE A FILTER <br>
                                   STEP 2: RIGHT CLICK THE MAP <br>
                                   STEP 3: CLICK THE PIN OF THE MAP TO ADD THE PLACE</div>
            <button id="butt" onclick="off()">Understood</button>
        </div>
        
        
        
             

        <br>
        <div id="map"></div>
        
        <form action="viewlist" >
            <input type="submit" value="View Lists">
        </form> <br>
        <div id="tempTable"></div>
        <a href="createlistpage"><input type="submit" value="Create New List"></a>

        <h2> {{list}}   {{date}}</h2>
        <script>
            var map
            var curPlace
            var infoWindow
            var placeType
            var autocomplete
            
            var center
            var request
            var detRequest
            var service
            var types
            var markers = [];
            var mapCircle
            var savedPlaces = [];
            
            
                function initMap(){
                    console.log($('#filter').offset())
                    on();
                    center = new google.maps.LatLng(14.5647, 120.9932)
                    var options = {
                        zoom:13,
                        center:center
                    }
                    
                    var defBounds = new google.maps.LatLngBounds(
                        new google.maps.LatLng(19.284567, 122.575897),
                        new google.maps.LatLng(6.678588, 118.347838)
                    )
                    var searchOptions = {
                        componentRestrictions: {country: 'ph'}
                    }
                    
                    var input = document.getElementById('query');
                    types = $('#filter').val();
                    
                    autocomplete = new google.maps.places.Autocomplete(input, searchOptions);
                    map = new google.maps.Map(document.getElementById('map'), options);
                    infoWindow = new google.maps.InfoWindow();
                    service = new google.maps.places.PlacesService(map);
                    
                    google.maps.event.addListener(map, 'rightclick', function(event){
                        map.setCenter(event.latLng)
                        center = event.latLng
                        clearCircle()
                        drawCircle()
                        clearResults(markers)
                        
                        request = {
                            location : event.latLng,
                            radius : 8047,
                            types : [types]
                        }
                
                        service.nearbySearch(request, callback)
                    })
                    
                    $('#subQuery').click(function(){
                        
                        request = {
                            query : $('#query').val(),
                            fields : ['place_id']
                        }
                        
                        $('#query').val('')
                        $('#subQuery').prop('disabled', true);
                        clearCircle();
                        clearResults(markers)
                        console.log(request)
                        service.findPlaceFromQuery(request, function(results, status){
                            if(status == google.maps.places.PlacesServiceStatus.OK){
                                for(var i = 0; i < results.length; i++){
                                    console.log(results[i])
                                    detRequest = {
                                        placeId: results[i].place_id,
                                        fields: ['geometry', 'icon', 'name', 'rating', 'photo', 'place_id', 'plus_code', 'type', 'url', 'utc_offset', 'vicinity']
                                    }
                                }
                            }
                            console.log(detRequest)

                            getdetails();
                        })
                    })
                    
                    if(!"$('#query')".val){
                        $('#subQuery').prop('disabled', true);
                    }
                    
                    
                    google.maps.event.addListener(autocomplete, 'place_changed', function() {
                        $('#subQuery').prop('disabled', false);
                    });  

                    $('#query').on('focus', function() {
                            selected = false;
                        }).on('blur', function() {
                            if (!selected) {
                                $(this).val('');
                            }
                    });
                    
                    $('#filter').change(function(){
                        types = $('#filter').val()
                    })
                    
    
                }
                           

            
                function callback(results, status){
                    if(status == google.maps.places.PlacesServiceStatus.OK){
                        for(var i = 0; i < results.length; i++){
                            console.log(results[i])
                            markers.push(createMarker(results[i]));
                       }
                    }
                }
                
                function callback2(place, status){
                    console.log(place)
                    if(status == google.maps.places.PlacesServiceStatus.OK){
                        markers.push(createMarker(place));
                        map.setCenter(place.geometry.location);
                    }
                }
                

            
                
                function createMarker(place){
                    var placeLoc = place.geometry.location;
                    var marker = new google.maps.Marker({
                        map:map,
                        animation: google.maps.Animation.DROP,
                        position: place.geometry.location
                    })
            


                    google.maps.event.addListener(marker, 'click', function(){
                        
                        curPlace = place;
                        var placePhoto = '<img src=https://maps.googleapis.com/maps/api/place/photo?maxheight=&maxwidth=400&photoreference=' + place.photos[0].photoreference + '&key=AIzaSyDKkISCreDl16D3FVIDI476Jre8-qEFPv0>'
                        infoWindow.setContent(place.name + '<br>'+ place.vicinity + '<br>' + place.rating  + '<img src="https://img.freepik.com/free-vector/start_53876-25533.jpg?size=338&ext=jpg" height="12" width="12">' + '<br>' + placePhoto + '<br>' + '<button id="add" onclick="addPlace()">Add</button>');
                        

                        infoWindow.open(map, this)
                        
                    })
                    

                    return marker;
                }
            

                function addPlace(){
                    savedPlaces.push(curPlace)
                    console.log(savedPlaces)
                    var perrow = 5,
                    html = "<table><tr>";

  
                    for (var i=0; i<savedPlaces .length; i++) {
                        html += "<td>" + savedPlaces[i].name + "-></td>";
                        var next = i+1;
                        if (next%perrow==0 && next!=savedPlaces.length) {
                            html += "</tr><tr>";
                        }
                    }
                    html += "</tr></table>";

                    document.getElementById("tempTable").innerHTML = html;
                }
                    
            
                function clearResults(markers){
                    for (var m in markers){
                        markers[m].setMap(null)
                    }
                    markers = []
                }
            
                function clearCircle(){
                    if(mapCircle){
                        mapCircle.setMap(null)
                        mapCircle = null;
                    }   
                }
                
                function drawCircle(){
                    mapCircle = new google.maps.Circle({
                    strokeColor: '#ffffff',
                    strokeOpacity: 0.8,
                    strokeWeight: 2,
                    fillColor: '#dbdbdb',
                    fillOpacity: 0.50,
                    map: map,
                    center: center,
                    radius: 8047
                    })
                }
                function on() {
                    document.getElementById("overlay").style.display = "block";
                }

                function off() {
                    document.getElementById("overlay").style.display = "none";
                }
            
                function getdetails(){
                    service.getDetails(detRequest, callback2)
                }
            
            
        </script>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDKkISCreDl16D3FVIDI476Jre8-qEFPv0&callback=initMap&libraries=places" async defer></script>
    
    </body>
</html>